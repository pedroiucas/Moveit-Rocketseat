{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"D:/All codes/TypeScript/NLW4-Rocketseat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\All codes\\\\TypeScript\\\\NLW4-Rocketseat\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { CountdownContext } from '../contexts/CountdownContext';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  _s();\n\n  var _useContext = useContext(CountdownContext),\n      minutes = _useContext.minutes,\n      seconds = _useContext.seconds,\n      hasFinished = _useContext.hasFinished,\n      isActive = _useContext.isActive,\n      resetCountdown = _useContext.resetCountdown,\n      startCountdown = _useContext.startCountdown; //PadStart - se a string não tiver 2 caracteres vai preencher a esquerda(start) com 0.\n\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Countdown,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: \"\".concat(styles.CountdownButton, \" \").concat(styles.CountdownButtonCicleFinished),\n      children: [\"Ciclo encerrado\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icons/check.png\",\n        alt: \"Ciclo encerrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: resetCountdown,\n      className: \"\".concat(styles.CountdownButton, \" \").concat(styles.CountdownButtonActive),\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: startCountdown,\n      className: styles.CountdownButton,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Countdown, \"i0QIgbH3GUTEj7CffxRMwljZvlk=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["D:/All codes/TypeScript/NLW4-Rocketseat/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minutes","seconds","hasFinished","isActive","resetCountdown","startCountdown","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","CountdownButton","CountdownButtonCicleFinished","CountdownButtonActive"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAIA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,oBAC0DH,UAAU,CAACC,gBAAD,CADpE;AAAA,MAClBG,OADkB,eAClBA,OADkB;AAAA,MACTC,OADS,eACTA,OADS;AAAA,MACAC,WADA,eACAA,WADA;AAAA,MACaC,QADb,eACaA,QADb;AAAA,MACuBC,cADvB,eACuBA,cADvB;AAAA,MACuCC,cADvC,eACuCA,cADvC,EAG1B;;;AAH0B,8BAIQC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAJR;AAAA;AAAA,MAInBC,UAJmB;AAAA,MAIPC,WAJO;;AAAA,+BAKQJ,MAAM,CAACL,OAAD,CAAN,CAAgBM,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CALR;AAAA;AAAA,MAKnBG,UALmB;AAAA,MAKPC,WALO;;AAO1B,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACC,SAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOU;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGV,WAAW,gBACV;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,YAAKJ,MAAM,CAACe,eAAZ,cAA+Bf,MAAM,CAACgB,4BAAtC,CAFX;AAAA,iDAIE;AAAK,QAAA,GAAG,EAAC,kBAAT;AAA4B,QAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,GAQRX,QAAQ,gBACN;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEC,cAA/B;AAA+C,MAAA,SAAS,YAAKN,MAAM,CAACe,eAAZ,cAA+Bf,MAAM,CAACiB,qBAAtC,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAKJ;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEV,cAA/B;AAA+C,MAAA,SAAS,EAAEP,MAAM,CAACe,eAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAzCed,S;;KAAAA,S","sourcesContent":["import { useContext } from 'react';\r\nimport { CountdownContext } from '../contexts/CountdownContext';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\n\r\n\r\nexport function Countdown() {\r\n  const { minutes, seconds, hasFinished, isActive, resetCountdown, startCountdown } = useContext(CountdownContext)\r\n\r\n  //PadStart - se a string não tiver 2 caracteres vai preencher a esquerda(start) com 0.\r\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.Countdown}>\r\n        <div>\r\n          <span>{minuteLeft}</span>\r\n          <span>{minuteRight}</span>\r\n        </div>\r\n        <span>:</span>\r\n        <div>\r\n          <span>{secondLeft}</span>\r\n          <span>{secondRight}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {hasFinished ? (\r\n        <button\r\n          disabled\r\n          className={`${styles.CountdownButton} ${styles.CountdownButtonCicleFinished}`}>\r\n          Ciclo encerrado\r\n          <img src=\"/icons/check.png\" alt=\"Ciclo encerrado\"/>\r\n        </button>\r\n      ) : (\r\n          isActive ? (\r\n            <button type=\"button\" onClick={resetCountdown} className={`${styles.CountdownButton} ${styles.CountdownButtonActive}`}>\r\n              Abandonar ciclo\r\n            </button>\r\n          ) : (\r\n              <button type=\"button\" onClick={startCountdown} className={styles.CountdownButton}>\r\n                Iniciar um ciclo\r\n              </button>\r\n            )\r\n        )}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}